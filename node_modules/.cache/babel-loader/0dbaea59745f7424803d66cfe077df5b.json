{"ast":null,"code":"import { renderEntireTree } from './App';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE _NEW_MESSAGE_BODY';\nlet state = {\n  profilesPage: {\n    posts: [{\n      id: 1,\n      message: 'hi, its my firt post',\n      likeCount: 15\n    }, {\n      id: 2,\n      message: 'hey a you develooers?',\n      likeCount: 17\n    }, {\n      id: 3,\n      message: 'hi, its my firt post',\n      likeCount: 20\n    }, {\n      id: 4,\n      message: 'hi, its my fird post',\n      likeCount: 20\n    }],\n    profiles: [{\n      id: 1,\n      name: 'Kate'\n    }, {\n      id: 2,\n      name: 'Sergey'\n    }, {\n      id: 3,\n      name: 'Kate'\n    }, {\n      id: 4,\n      name: 'Sergey'\n    }, {\n      id: 5,\n      name: 'Kate'\n    }, {\n      id: 6,\n      name: 'Sergey'\n    }]\n  },\n  messagesPage: {\n    messages: [{\n      id: 1,\n      message: 'Hey'\n    }, {\n      id: 2,\n      message: 'How are you?'\n    }, {\n      id: 3,\n      message: 'Hey'\n    }, {\n      id: 4,\n      message: 'How are you?'\n    }, {\n      id: 5,\n      message: 'Hey'\n    }, {\n      id: 6,\n      message: 'How are you?'\n    }, {\n      id: 7,\n      message: 'Were you been, my friend'\n    }],\n    //newMessegeBody : \"\";\n    dialogs: [{\n      id: 1,\n      name: 'Kate'\n    }, {\n      id: 2,\n      name: 'Sergey'\n    }, {\n      id: 3,\n      name: 'Kate'\n    }, {\n      id: 4,\n      name: 'Sergey'\n    }, {\n      id: 5,\n      name: 'Kate'\n    }, {\n      id: 6,\n      name: 'Sergey'\n    }]\n  }\n};\nexport const subscribe = observe => {};\nexport const addPost = postMessage => {\n  let newPost = {\n    id: 7,\n    name: postMessage\n  };\n  state.profiles.push(newPost);\n  renderEntireTree(state);\n}; //  dispatch(action) {\n//   if else {action.type === UPDATE_NEW_MESSAGE_BODY}{dialogs\n//      this.state.dialogs.newMessegeBody = action.body\n// }\n// }\n\nexport default state;","map":{"version":3,"sources":["/storage/emulated/0/ASTRO/projects/react_2/src/components/state.js"],"names":["renderEntireTree","UPDATE_NEW_MESSAGE_BODY","state","profilesPage","posts","id","message","likeCount","profiles","name","messagesPage","messages","dialogs","subscribe","observe","addPost","postMessage","newPost","push"],"mappings":"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","sourcesContent":["import {renderEntireTree } from './App';\n\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE _NEW_MESSAGE_BODY'\n\nlet state = {\n    \n    profilesPage : {\n        posts: [\n        {id:1, message: 'hi, its my firt post', likeCount: 15},\n        {id:2, message: 'hey a you develooers?', likeCount: 17},\n        {id:3, message: 'hi, its my firt post', likeCount: 20},\n        {id:4, message: 'hi, its my fird post', likeCount: 20}\n        ],\n     profiles: [ \n                 {id: 1, name: 'Kate'},\n                 {id: 2, name: 'Sergey'},\n                 {id: 3, name: 'Kate'},\n                 {id: 4, name: 'Sergey'},\n                 {id: 5, name: 'Kate'},\n                 {id: 6, name: 'Sergey'}\n             ]     \n    },\n    \n  messagesPage: {\n   \n    messages: [\n    {id: 1, message:'Hey'},\n    {id: 2, message:'How are you?'},\n    {id: 3, message:'Hey'},\n    {id: 4, message:'How are you?'},\n    {id: 5, message:'Hey'},\n    {id: 6, message:'How are you?'},\n    {id: 7, message:'Were you been, my friend'}  \n    ],\n    \n    //newMessegeBody : \"\";\n    \n   dialogs: [\n   {id: 1, name: 'Kate'},\n   {id: 2, name: 'Sergey'},\n   {id: 3, name: 'Kate'},\n   {id: 4, name: 'Sergey'},\n   {id: 5, name: 'Kate'},\n   {id: 6, name: 'Sergey'}\n   ]\n   \n   }\n          \n    }\n    export const subscribe = (observe) => {\n        }\n    \nexport const  addPost = (postMessage) => {\n    let newPost = {\n        id: 7,\n        name: postMessage  \n        };\n\n      state.profiles.push(newPost);\n      renderEntireTree(state);\n      }    \n    \n  //  dispatch(action) {\n  //   if else {action.type === UPDATE_NEW_MESSAGE_BODY}{dialogs\n   //      this.state.dialogs.newMessegeBody = action.body\n         \n    // }\n   // }\n    \nexport default state;"]},"metadata":{},"sourceType":"module"}