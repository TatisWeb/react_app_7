{"ast":null,"code":"let rerenderEntireTree = () => {\n  alert('hi');\n};\n\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE _NEW_MESSAGE_BODY';\nlet state = {\n  messages: [{\n    id: 1,\n    message: 'Hey'\n  }, {\n    id: 2,\n    message: 'How are you?'\n  }, {\n    id: 3,\n    message: 'Hey'\n  }, {\n    id: 4,\n    message: 'How are you?'\n  }, {\n    id: 5,\n    message: 'Hey'\n  }, {\n    id: 6,\n    message: 'How are you?'\n  }, {\n    id: 7,\n    message: 'Were you been, my friend'\n  }],\n  //newMessegeBody : \"\";\n  dialogs: [{\n    id: 1,\n    name: 'Kate'\n  }, {\n    id: 2,\n    name: 'Sergey'\n  }, {\n    id: 3,\n    name: 'Kate'\n  }, {\n    id: 4,\n    name: 'Sergey'\n  }, {\n    id: 5,\n    name: 'Kate'\n  }, {\n    id: 6,\n    name: 'Sergey'\n  }],\n  posts: [{\n    id: 1,\n    likeCount: 4\n  }, {\n    id: 2,\n    likeCount: 15\n  }, {\n    id: 3,\n    likeCount: 16\n  }, {\n    id: 4,\n    likeCount: 3\n  }, {\n    id: 5,\n    likeCount: 4\n  }, {\n    id: 6,\n    likeCount: 17\n  }],\n  profiles: [{\n    id: 1,\n    name: 'Kate'\n  }, {\n    id: 2,\n    name: 'Sergey'\n  }, {\n    id: 3,\n    name: 'Kate'\n  }, {\n    id: 4,\n    name: 'Sergey'\n  }, {\n    id: 5,\n    name: 'Kate'\n  }, {\n    id: 6,\n    name: 'Sergey'\n  }]\n};\nexport const subscribe = observe => {};\nexport const addPost = postMessage => {\n  let newPost = {\n    id: 7,\n    name: postMessage\n  };\n  state.profiles.push(newPost);\n  renderEntireTree(state);\n}; //  dispatch(action) {\n//   if else {action.type === UPDATE_NEW_MESSAGE_BODY}{dialogs\n//      this.state.dialogs.newMessegeBody = action.body\n// }\n// }\n\nexport default state;","map":{"version":3,"sources":["/storage/emulated/0/ASTRO/projects/react_2/src/components/state.js"],"names":["rerenderEntireTree","alert","UPDATE_NEW_MESSAGE_BODY","state","messages","id","message","dialogs","name","posts","likeCount","profiles","subscribe","observe","addPost","postMessage","newPost","push","renderEntireTree"],"mappings":"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","sourcesContent":["let rerenderEntireTree = () => {alert('hi')};\n\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE _NEW_MESSAGE_BODY'\n\nlet state = {\n    \n    messages: [\n    {id: 1, message:'Hey'},\n    {id: 2, message:'How are you?'},\n    {id: 3, message:'Hey'},\n    {id: 4, message:'How are you?'},\n    {id: 5, message:'Hey'},\n    {id: 6, message:'How are you?'},\n    {id: 7, message:'Were you been, my friend'}  \n    ],\n    \n    //newMessegeBody : \"\";\n    \n   dialogs: [\n   {id: 1, name: 'Kate'},\n   {id: 2, name: 'Sergey'},\n   {id: 3, name: 'Kate'},\n   {id: 4, name: 'Sergey'},\n   {id: 5, name: 'Kate'},\n   {id: 6, name: 'Sergey'}\n   ],\n   \n   \n   \n   posts: [\n            {id: 1, likeCount: 4},\n            {id: 2, likeCount: 15},\n            {id: 3, likeCount: 16},\n            {id: 4, likeCount: 3},\n            {id: 5, likeCount: 4},\n            {id: 6, likeCount: 17}     \n           ],\n   \n    profiles: [ \n                 {id: 1, name: 'Kate'},\n                 {id: 2, name: 'Sergey'},\n                 {id: 3, name: 'Kate'},\n                 {id: 4, name: 'Sergey'},\n                 {id: 5, name: 'Kate'},\n                 {id: 6, name: 'Sergey'}\n              ],           \n   \n   \n    }\n    export const subscribe = (observe) => {\n        }\n    \nexport const  addPost = (postMessage) => {\n    let newPost = {\n        id: 7,\n        name: postMessage  \n        };\n\n      state.profiles.push(newPost);\n      renderEntireTree(state);\n      }    \n    \n  //  dispatch(action) {\n  //   if else {action.type === UPDATE_NEW_MESSAGE_BODY}{dialogs\n   //      this.state.dialogs.newMessegeBody = action.body\n         \n    // }\n   // }\n    \nexport default state;"]},"metadata":{},"sourceType":"module"}