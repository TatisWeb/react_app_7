{"ast":null,"code":"var _jsxFileName = \"/storage/emulated/0/ASTRO/projects/react_2/src/components/Editor.js\";\nimport ListErrors from './ListErrors';\nimport React from 'react';\nimport agent from '../agent';\nimport { connect } from 'react-redux';\nimport { ADD_TAG, EDITOR_PAGE_LOADED, REMOVE_TAG, ARTICLE_SUBMITTED, EDITOR_PAGE_UNLOADED, UPDATE_FIELD_EDITOR } from '../constants/actionTypes';\n\nconst mapStateToProps = state => ({ ...state.editor\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddTag: () => dispatch({\n    type: ADD_TAG\n  }),\n  onLoad: payload => dispatch({\n    type: EDITOR_PAGE_LOADED,\n    payload\n  }),\n  onRemoveTag: tag => dispatch({\n    type: REMOVE_TAG,\n    tag\n  }),\n  onSubmit: payload => dispatch({\n    type: ARTICLE_SUBMITTED,\n    payload\n  }),\n  onUnload: payload => dispatch({\n    type: EDITOR_PAGE_UNLOADED\n  }),\n  onUpdateField: (key, value) => dispatch({\n    type: UPDATE_FIELD_EDITOR,\n    key,\n    value\n  })\n});\n\nclass Editor extends React.Component {\n  constructor() {\n    super();\n\n    const updateFieldEvent = key => ev => this.props.onUpdateField(key, ev.target.value);\n\n    this.changeTitle = updateFieldEvent('title');\n    this.changeDescription = updateFieldEvent('description');\n    this.changeBody = updateFieldEvent('body');\n    this.changeTagInput = updateFieldEvent('tagInput');\n\n    this.watchForEnter = ev => {\n      if (ev.keyCode === 13) {\n        ev.preventDefault();\n        this.props.onAddTag();\n      }\n    };\n\n    this.removeTagHandler = tag => () => {\n      this.props.onRemoveTag(tag);\n    };\n\n    this.submitForm = ev => {\n      ev.preventDefault();\n      const article = {\n        title: this.props.title,\n        description: this.props.description,\n        body: this.props.body,\n        tagList: this.props.tagList\n      };\n      const slug = {\n        slug: this.props.articleSlug\n      };\n      const promise = this.props.articleSlug ? agent.Articles.update(Object.assign(article, slug)) : agent.Articles.create(article);\n      this.props.onSubmit(promise);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.match.params.slug !== nextProps.match.params.slug) {\n      if (nextProps.match.params.slug) {\n        this.props.onUnload();\n        return this.props.onLoad(agent.Articles.get(this.props.match.params.slug));\n      }\n\n      this.props.onLoad(null);\n    }\n  }\n\n  componentWillMount() {\n    if (this.props.match.params.slug) {\n      return this.props.onLoad(agent.Articles.get(this.props.match.params.slug));\n    }\n\n    this.props.onLoad(null);\n  }\n\n  componentWillUnmount() {\n    this.props.onUnload();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editor-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-10 offset-md-1 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListErrors, {\n      errors: this.props.errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control form-control-lg\",\n      type: \"text\",\n      placeholder: \"Article Title\",\n      value: this.props.title,\n      onChange: this.changeTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"What's this article about?\",\n      value: this.props.description,\n      onChange: this.changeDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      rows: \"8\",\n      placeholder: \"Write your article (in markdown)\",\n      value: this.props.body,\n      onChange: this.changeBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"Enter tags\",\n      value: this.props.tagInput,\n      onChange: this.changeTagInput,\n      onKeyUp: this.watchForEnter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tag-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, (this.props.tagList || []).map(tag => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tag-default tag-pill\",\n        key: tag,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ion-close-round\",\n        onClick: this.removeTagHandler(tag),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 31\n        }\n      }), tag);\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-lg pull-xs-right btn-primary\",\n      type: \"button\",\n      disabled: this.props.inProgress,\n      onClick: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, \"Publish Article\")))))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);","map":{"version":3,"sources":["/storage/emulated/0/ASTRO/projects/react_2/src/components/Editor.js"],"names":["ListErrors","React","agent","connect","ADD_TAG","EDITOR_PAGE_LOADED","REMOVE_TAG","ARTICLE_SUBMITTED","EDITOR_PAGE_UNLOADED","UPDATE_FIELD_EDITOR","mapStateToProps","state","editor","mapDispatchToProps","dispatch","onAddTag","type","onLoad","payload","onRemoveTag","tag","onSubmit","onUnload","onUpdateField","key","value","Editor","Component","constructor","updateFieldEvent","ev","props","target","changeTitle","changeDescription","changeBody","changeTagInput","watchForEnter","keyCode","preventDefault","removeTagHandler","submitForm","article","title","description","body","tagList","slug","articleSlug","promise","Articles","update","Object","assign","create","componentWillReceiveProps","nextProps","match","params","get","componentWillMount","componentWillUnmount","render","errors","tagInput","map","inProgress"],"mappings":"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","sourcesContent":["import ListErrors from './ListErrors';\nimport React from 'react';\nimport agent from '../agent';\nimport { connect } from 'react-redux';\nimport {\n  ADD_TAG,\n  EDITOR_PAGE_LOADED,\n  REMOVE_TAG,\n  ARTICLE_SUBMITTED,\n  EDITOR_PAGE_UNLOADED,\n  UPDATE_FIELD_EDITOR\n} from '../constants/actionTypes';\n\nconst mapStateToProps = state => ({\n  ...state.editor\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddTag: () =>\n    dispatch({ type: ADD_TAG }),\n  onLoad: payload =>\n    dispatch({ type: EDITOR_PAGE_LOADED, payload }),\n  onRemoveTag: tag =>\n    dispatch({ type: REMOVE_TAG, tag }),\n  onSubmit: payload =>\n    dispatch({ type: ARTICLE_SUBMITTED, payload }),\n  onUnload: payload =>\n    dispatch({ type: EDITOR_PAGE_UNLOADED }),\n  onUpdateField: (key, value) =>\n    dispatch({ type: UPDATE_FIELD_EDITOR, key, value })\n});\n\nclass Editor extends React.Component {\n  constructor() {\n    super();\n\n    const updateFieldEvent =\n      key => ev => this.props.onUpdateField(key, ev.target.value);\n    this.changeTitle = updateFieldEvent('title');\n    this.changeDescription = updateFieldEvent('description');\n    this.changeBody = updateFieldEvent('body');\n    this.changeTagInput = updateFieldEvent('tagInput');\n\n    this.watchForEnter = ev => {\n      if (ev.keyCode === 13) {\n        ev.preventDefault();\n        this.props.onAddTag();\n      }\n    };\n\n    this.removeTagHandler = tag => () => {\n      this.props.onRemoveTag(tag);\n    };\n\n    this.submitForm = ev => {\n      ev.preventDefault();\n      const article = {\n        title: this.props.title,\n        description: this.props.description,\n        body: this.props.body,\n        tagList: this.props.tagList\n      };\n\n      const slug = { slug: this.props.articleSlug };\n      const promise = this.props.articleSlug ?\n        agent.Articles.update(Object.assign(article, slug)) :\n        agent.Articles.create(article);\n\n      this.props.onSubmit(promise);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.match.params.slug !== nextProps.match.params.slug) {\n      if (nextProps.match.params.slug) {\n        this.props.onUnload();\n        return this.props.onLoad(agent.Articles.get(this.props.match.params.slug));\n      }\n      this.props.onLoad(null);\n    }\n  }\n\n  componentWillMount() {\n    if (this.props.match.params.slug) {\n      return this.props.onLoad(agent.Articles.get(this.props.match.params.slug));\n    }\n    this.props.onLoad(null);\n  }\n\n  componentWillUnmount() {\n    this.props.onUnload();\n  }\n\n  render() {\n    return (\n      <div className=\"editor-page\">\n        <div className=\"container page\">\n          <div className=\"row\">\n            <div className=\"col-md-10 offset-md-1 col-xs-12\">\n\n              <ListErrors errors={this.props.errors}></ListErrors>\n\n              <form>\n                <fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      type=\"text\"\n                      placeholder=\"Article Title\"\n                      value={this.props.title}\n                      onChange={this.changeTitle} />\n                  </fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"What's this article about?\"\n                      value={this.props.description}\n                      onChange={this.changeDescription} />\n                  </fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <textarea\n                      className=\"form-control\"\n                      rows=\"8\"\n                      placeholder=\"Write your article (in markdown)\"\n                      value={this.props.body}\n                      onChange={this.changeBody}>\n                    </textarea>\n                  </fieldset>\n\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Enter tags\"\n                      value={this.props.tagInput}\n                      onChange={this.changeTagInput}\n                      onKeyUp={this.watchForEnter} />\n\n                    <div className=\"tag-list\">\n                      {\n                        (this.props.tagList || []).map(tag => {\n                          return (\n                            <span className=\"tag-default tag-pill\" key={tag}>\n                              <i  className=\"ion-close-round\"\n                                  onClick={this.removeTagHandler(tag)}>\n                              </i>\n                              {tag}\n                            </span>\n                          );\n                        })\n                      }\n                    </div>\n                  </fieldset>\n\n                  <button\n                    className=\"btn btn-lg pull-xs-right btn-primary\"\n                    type=\"button\"\n                    disabled={this.props.inProgress}\n                    onClick={this.submitForm}>\n                    Publish Article\n                  </button>\n\n                </fieldset>\n              </form>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);\n"]},"metadata":{},"sourceType":"module"}