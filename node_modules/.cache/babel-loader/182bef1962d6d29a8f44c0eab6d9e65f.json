{"ast":null,"code":"var _jsxFileName = \"/storage/emulated/0/ASTRO/projects/react_2/src/components/Settings.js\";\nimport ListErrors from './ListErrors';\nimport React from 'react';\nimport agent from '../agent';\nimport { connect } from 'react-redux';\nimport { SETTINGS_SAVED, SETTINGS_PAGE_UNLOADED, LOGOUT } from '../constants/actionTypes';\n\nclass SettingsForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      image: '',\n      username: '',\n      bio: '',\n      email: '',\n      password: ''\n    };\n\n    this.updateState = field => ev => {\n      const state = this.state;\n      const newState = Object.assign({}, state, {\n        [field]: ev.target.value\n      });\n      this.setState(newState);\n    };\n\n    this.submitForm = ev => {\n      ev.preventDefault();\n      const user = Object.assign({}, this.state);\n\n      if (!user.password) {\n        delete user.password;\n      }\n\n      this.props.onSubmitForm(user);\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.currentUser) {\n      Object.assign(this.state, {\n        image: this.props.currentUser.image || '',\n        username: this.props.currentUser.username,\n        bio: this.props.currentUser.bio,\n        email: this.props.currentUser.email\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser) {\n      this.setState(Object.assign({}, this.state, {\n        image: nextProps.currentUser.image || '',\n        username: nextProps.currentUser.username,\n        bio: nextProps.currentUser.bio,\n        email: nextProps.currentUser.email\n      }));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"URL of profile picture\",\n      value: this.state.image,\n      onChange: this.updateState('image'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control form-control-lg\",\n      type: \"text\",\n      placeholder: \"Username\",\n      value: this.state.username,\n      onChange: this.updateState('username'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control form-control-lg\",\n      rows: \"8\",\n      placeholder: \"Short bio about you\",\n      value: this.state.bio,\n      onChange: this.updateState('bio'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control form-control-lg\",\n      type: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.updateState('email'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control form-control-lg\",\n      type: \"password\",\n      placeholder: \"New Password\",\n      value: this.state.password,\n      onChange: this.updateState('password'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary pull-xs-right\",\n      type: \"submit\",\n      disabled: this.state.inProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"Update Settings\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({ ...state.settings,\n  currentUser: state.common.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClickLogout: () => dispatch({\n    type: LOGOUT\n  }),\n  onSubmitForm: user => dispatch({\n    type: SETTINGS_SAVED,\n    payload: agent.Auth.save(user)\n  }),\n  onUnload: () => dispatch({\n    type: SETTINGS_PAGE_UNLOADED\n  })\n});\n\nclass Settings extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 offset-md-3 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-xs-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \"Your Settings\"), /*#__PURE__*/React.createElement(ListErrors, {\n      errors: this.props.errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(SettingsForm, {\n      currentUser: this.props.currentUser,\n      onSubmitForm: this.props.onSubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger\",\n      onClick: this.props.onClickLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, \"Or click here to logout.\")))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","map":{"version":3,"sources":["/storage/emulated/0/ASTRO/projects/react_2/src/components/Settings.js"],"names":["ListErrors","React","agent","connect","SETTINGS_SAVED","SETTINGS_PAGE_UNLOADED","LOGOUT","SettingsForm","Component","constructor","state","image","username","bio","email","password","updateState","field","ev","newState","Object","assign","target","value","setState","submitForm","preventDefault","user","props","onSubmitForm","componentWillMount","currentUser","componentWillReceiveProps","nextProps","render","inProgress","mapStateToProps","settings","common","mapDispatchToProps","dispatch","onClickLogout","type","payload","Auth","save","onUnload","Settings","errors"],"mappings":"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","sourcesContent":["import ListErrors from './ListErrors';\nimport React from 'react';\nimport agent from '../agent';\nimport { connect } from 'react-redux';\nimport {\n  SETTINGS_SAVED,\n  SETTINGS_PAGE_UNLOADED,\n  LOGOUT\n} from '../constants/actionTypes';\n\nclass SettingsForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      image: '',\n      username: '',\n      bio: '',\n      email: '',\n      password: ''\n    };\n\n    this.updateState = field => ev => {\n      const state = this.state;\n      const newState = Object.assign({}, state, { [field]: ev.target.value });\n      this.setState(newState);\n    };\n\n    this.submitForm = ev => {\n      ev.preventDefault();\n\n      const user = Object.assign({}, this.state);\n      if (!user.password) {\n        delete user.password;\n      }\n\n      this.props.onSubmitForm(user);\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.currentUser) {\n      Object.assign(this.state, {\n        image: this.props.currentUser.image || '',\n        username: this.props.currentUser.username,\n        bio: this.props.currentUser.bio,\n        email: this.props.currentUser.email\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser) {\n      this.setState(Object.assign({}, this.state, {\n        image: nextProps.currentUser.image || '',\n        username: nextProps.currentUser.username,\n        bio: nextProps.currentUser.bio,\n        email: nextProps.currentUser.email\n      }));\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.submitForm}>\n        <fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"URL of profile picture\"\n              value={this.state.image}\n              onChange={this.updateState('image')} />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"text\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.updateState('username')} />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <textarea\n              className=\"form-control form-control-lg\"\n              rows=\"8\"\n              placeholder=\"Short bio about you\"\n              value={this.state.bio}\n              onChange={this.updateState('bio')}>\n            </textarea>\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"email\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              onChange={this.updateState('email')} />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"password\"\n              placeholder=\"New Password\"\n              value={this.state.password}\n              onChange={this.updateState('password')} />\n          </fieldset>\n\n          <button\n            className=\"btn btn-lg btn-primary pull-xs-right\"\n            type=\"submit\"\n            disabled={this.state.inProgress}>\n            Update Settings\n          </button>\n\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state.settings,\n  currentUser: state.common.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClickLogout: () => dispatch({ type: LOGOUT }),\n  onSubmitForm: user =>\n    dispatch({ type: SETTINGS_SAVED, payload: agent.Auth.save(user) }),\n  onUnload: () => dispatch({ type: SETTINGS_PAGE_UNLOADED })\n});\n\nclass Settings extends React.Component {\n  render() {\n    return (\n      <div className=\"settings-page\">\n        <div className=\"container page\">\n          <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3 col-xs-12\">\n\n              <h1 className=\"text-xs-center\">Your Settings</h1>\n\n              <ListErrors errors={this.props.errors}></ListErrors>\n\n              <SettingsForm\n                currentUser={this.props.currentUser}\n                onSubmitForm={this.props.onSubmitForm} />\n\n              <hr />\n\n              <button\n                className=\"btn btn-outline-danger\"\n                onClick={this.props.onClickLogout}>\n                Or click here to logout.\n              </button>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n"]},"metadata":{},"sourceType":"module"}